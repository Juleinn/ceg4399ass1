
section 1 : pas de subsection
section 2 : existant
2.1 : detail --> résumés plus court
2.2 : comparaison et critique
2.3 : critique

=> réduire les marges
=> harmoniser les niveaux de détails, va etre fait a la réduction
=> références après la conclusion

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------

prochaine créneau le 2/mai a 16h


--> garantie temps réel, complexité

ex : critere : distribution des données, API, ...
restructurer la partie 2-2 pour ne pas faire une liste chiante
	--> ex. grouper par thématique et citer les articles
	--> chercher ce qui n'a pas été fait
	--> apporter de la valeur ajoutée : prendre du recul sur le sujet et se former une vision

--------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------



pas obligé de faire des choix binaires : discriminer les approches, pas obligé d'être binaire
--> mettre en parametre dans la case

dans deux semaines (av vancaces )
av les vacances : 1er draft fini, avec articles relus, criteres et comparaison

---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
| 																										|
| 								prochaine séance mardi 11/04 16h-18h									|
| 																										|
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------

-> harmoniser les articles en longueur
-> sortir les points originaux
krill herd : checker les resultats puis si il est nul le virer par rapport a sa forme

Articles : gros résumés
-> redimension dynamo pour que sa corresponde à la même taille que les autres.
Resumés suffisament long -> possibilite de mettre par section.

/!\ Mettre les références en bibtech--> outils de gestion de reference : mendelei
bblt : export bibtech (ou sur G. Scholar)


tableau : mettre juste la référence

Mettre une section "discussion par rapport au contexte de l'IoT" ( a la place de comparaison ?)
--> Mettre l'analyse dans comparaison pour équilibrer les deux sections
--> détailler par rapport à l'IoT

prochain : 29 mars 8h à 10h



\subsubsection{Motivation et principes}
 Il s'agit d'un système distribué sur différents serveurs,
habilité à stocker des données de natures très différentes. Ce système répond à des contraintes fortes de fiabilité car une 
défaillance même mineure a des conséquences importantes financières et sur la confiance du client.
Il faut donc assurer un état persistant, tout en assurant des performances convenables. C'est pourquoi Dynamo fait certains compromis, notament sur la cohérence des données, le tout étant de respecter au mieux les propriétés dites ACID : Atomicity, Consistency, Isolation, Durability, ce qui permet de garantir l'efficacité des requêtes.


\subsubsection{Pannes}
Les pannes sont considérées comme un comportement normal dans ce système en raison du grand nombre de machines qui communiquent
en même temps. L'achitecture est donc décentralisée pour qu'une panne n'entraine pas la perte de données. 

Le système dispose d'un mécanisme de détection des pannes, qui permet la réplication de données et l'équilibrage
des charges en cas de panne, grâce à des protocoles de synchronisation.

La tolérance aux pannes se fait grâce à deux mécanismes : 

D'abord, pour une donnée cliente à l'écriture sur un certain nombre de  noeuds, la donnée sera écrite sur les premiers noeuds dits saint (qui ne sont pas tombés). Puis pour des pannes plus permanentes, et afin de garantir de la consistence de données
entre les noeuds, le système implémente une synchronisation des répliques, pour garder des répliques cohérentes.
Un noeud est considéré comme tombé s'il ne répond pas. Si un noeud ne répond pas, ces voisins se tournent vers d'autres 
noeuds pour récupérer les données. Puis il vérifie de manière périodique le noeud tombé, au cas ou celui-ci reviendrait.

L'architecture logicielle est la suivante : Dynamo fontionne grâce à trois services différents : un service de coordination de requêtes, un service de maintient des members du réseaux et de détection de pannes et un service de stockage local de données. Ces services communiquent ensemble et peuvent être interfacés avec d'autres technologies (base de données, systèmes de fichiers...)
\subsubsection{Topologie}

Le réseau peer to peer ne prend pas en compte les risques d'attaques par un noeud défaillant : l'environnement du système est supposé non-hostile. 

C'est du au mécanisme de consistent hashing utilisé, conçu pour fonctionner correctement sans extensions simultanées des tables. 

Le système supporte des serveurs et des noeuds avec des capacités différentes et adapte leurs charges en conséquences. Toutefois le type des services qu'ils fournissent et leurs responsabilités au sein du réseau sont les mêmes. 

Malgré une architexture distribuée, certain noeuds dans le réseau sont dits coordinateurs et permettent par exemple
des résolutions de conflits de versions, ou de l'attribution de requetes.







